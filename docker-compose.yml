services:
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
      POSTGRES_DB: testdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U testuser -d testdb" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  profile-service:
    build: ./backend/profile-service
    ports:
      - "3000:3000"
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: testuser
      DB_PASSWORD: testpass
      DB_NAME: testdb
    depends_on:
      db:
        condition: service_healthy
      liquibase-profile:
        condition: service_completed_successfully
    networks:
      - app-network

  liquibase-profile:
    image: liquibase/liquibase
    depends_on:
      db:
        condition: service_healthy
    working_dir: /liquibase/changelog
    volumes:
      - ./backend/profile-service/db:/liquibase/changelog
    command: [ "--defaults-file=/liquibase/changelog/liquibase.properties", "update" ]
    networks:
      - app-network

  address-service:
    build: ./backend/address-service
    ports:
      - "3001:3001"
    environment:
      AUTH_USER: admin
      AUTH_PASS: admin1234
      PORT: 3001
    depends_on:
      - db
    networks:
      - app-network

  frontend:
    build: ./frontend
    ports:
      - "4200:4200"
    networks:
      - app-network

volumes:
  postgres_data:


networks:
  app-network:
    driver: bridge
